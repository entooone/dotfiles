" ==============================
" General
" ==============================
set encoding=utf-8
set nobomb
scriptencoding utf-8
filetype plugin indent on
syntax on
highlight Normal ctermbg=none
set hlsearch
set ignorecase
set smartcase
set autoindent
set wildmenu
set shiftwidth=4
set softtabstop=4
set tabstop=4
set expandtab
set smarttab
set backspace=indent,eol,start
set clipboard=unnamed
set visualbell t_vb=
set history=5000
set fileencoding=utf-8
set fileencodings=ucs-boms,utf-8,euc-jp,cp932
set fileformats=unix,dos,mac
set ambiwidth=single
set conceallevel=0
set noruler
set nonumber
set noshowcmd
set noshowmode
set nowrap
set showtabline=2
set laststatus=0
let mapleader = "\<Space>"

" ==============================
" Cursor
" ==============================
if has('vim_starting')
    let &t_SI .= "\e[6 q"
    let &t_EI .= "\e[2 q"
    let &t_SR .= "\e[4 q"
endif

" ==============================
" KeyMap
" ==============================
autocmd BufNewFile,BufRead *.txt nnoremap j gj
autocmd BufNewFile,BufRead *.txt nnoremap k gk
autocmd BufNewFile,BufRead *.txt vnoremap j gj
autocmd BufNewFile,BufRead *.txt vnoremap k gk
autocmd BufNewFile,BufRead *.md nnoremap j gj
autocmd BufNewFile,BufRead *.md nnoremap k gk
autocmd BufNewFile,BufRead *.md vnoremap j gj
autocmd BufNewFile,BufRead *.md vnoremap k gk
nnoremap Y y$

" ==============================
" netrw
" ==============================
let g:netrw_liststyle = 3

" ==============================
" Plugin
" ==============================
call plug#begin('~/.vim/plugged')
Plug 'Shougo/neosnippet.vim'
Plug 'Shougo/neosnippet-snippets'
Plug 'itchyny/lightline.vim'
Plug 'fatih/molokai'
Plug 'easymotion/vim-easymotion'
Plug 'prabirshrestha/vim-lsp'
Plug 'mattn/vim-lsp-settings'
call plug#end()

" ==============================
" neosnippet
" ==============================
imap <C-k>       <Plug>(neosnippet_expand_or_jump)
xmap <C-k>       <Plug>(neosnippet_expand_target)
smap <expr><TAB> neosnippet#expandable_or_jumpable() ?

" ==============================
" lightline
" ==============================
if !has('gui_running')
    set t_Co=256
endif
"let s:p = {
"  \ 'normal': {}, 'inactive': {},
"  \ 'insert': {}, 'replace': {}, 'visual': {},
"  \ 'tabline': {}
"  \ }
"let s:p.normal.left = [
"  \ ['blue', 'black', 'none'],
"  \ ['white', 'black']
"  \ ]
"let s:p.normal.right   = [
"  \ ['white', 'black'],
"  \ ['white', 'black'],
"  \ ['white', 'black']
"  \ ]
"let s:p.inactive.right = [
"  \ ['gray5', 'black'], 
"  \ ['gray5', 'black'], 
"  \ ['gray5', 'black'] 
"  \ ]
"let s:p.inactive.left = [ 
"  \ [ 'gray5', 'black' ]
"  \ ]
"let s:p.insert.left = [
"  \ ['green', 'black', 'none'],
"  \ ['white', 'black']
"  \ ]
"let s:p.insert.right = [
"  \ [ 'white', 'black' ], 
"  \ [ 'white', 'black' ],
"  \ [ 'white', 'black' ]
"  \ ]
"let s:p.replace.left = [
"  \ ['red', 'black', 'none'],
"  \ ['white', 'black']
"  \ ]
"let s:p.visual.left = [ 
"  \ ['violet', 'black', 'none'], 
"  \ ['white', 'black'] 
"  \ ]
"let s:p.normal.middle = [ [ 'white', 'black', 'none' ] ]
"let s:p.insert.middle = [ [ 'white', 'black', 'none' ] ]
"let s:p.replace.middle = s:p.normal.middle
"let s:p.replace.right  = s:p.normal.right
"let s:p.tabline.left   = [ [ 'white', 'black' ] ]
"let s:p.tabline.tabsel = [ [ 'white', 'black' ] ]
"let s:p.tabline.middle = [ [ 'white', 'black' ] ]
"let s:p.tabline.right  = [ [ 'white', 'black' ] ]
"let s:p.normal.error   = [ [ 'white', 'red' ] ]
"let s:p.normal.warning = [ [ 'white', 'yellow' ] ]
"let g:lightline#colorscheme#simplicity#palette = lightline#colorscheme#fill(s:p)
"let g:lightline = {
"    \ 'colorscheme': 'simplicity'
"    \ }
let g:lightline = {}
let g:lightline.tabline = {
    \ 'left' : [ [ 'tabs' ] ],
    \ 'right': [ [ 'filename' ] ]
    \ }
let g:lightline.tab = {
    \ 'active': [ 'tabnum', 'filename', 'modified' ],
    \ 'inactive': [ 'tabnum', 'filename', 'modified' ]
    \ }
let g:lightline.enable = {
    \ 'statusline': 0,
    \ 'tabline': 1
    \ }
function! GitCurrentBranch() abort
    return system('git branch --show-current')
endfunction

" ==============================
" molokai
" ==============================
augroup TransparentBG
    autocmd!
    autocmd Colorscheme * highlight Normal          ctermbg=NONE guibg=NONE
    autocmd Colorscheme * highlight VertSplit       ctermbg=NONE guibg=NONE ctermfg=238 
    autocmd Colorscheme * highlight NonText         ctermbg=NONE guibg=NONE
    autocmd Colorscheme * highlight LineNr          ctermbg=NONE guibg=NONE
    autocmd Colorscheme * highlight Folded          ctermbg=NONE guibg=NONE
    autocmd Colorscheme * highlight EndOfBuffer     ctermbg=NONE guibg=NONE
    autocmd Colorscheme * highlight Error           ctermbg=NONE guibg=NONE cterm=underline
    autocmd Colorscheme * highlight Todo            ctermbg=NONE guibg=NONE
    autocmd Colorscheme * highlight ToolbarButton   ctermbg=NONE guibg=NONE
    autocmd Colorscheme * highlight StatusLine      ctermbg=NONE guibg=NONE ctermfg=238 cterm=NONE
    autocmd Colorscheme * highlight StatusLineNC    ctermbg=NONE guibg=NONE ctermfg=238 cterm=NONE
    autocmd Colorscheme * highlight StatusLineTerm  ctermbg=NONE guibg=NONE
    autocmd Colorscheme * highlight StatusLineTerNC ctermbg=NONE guibg=NONE
    autocmd Colorscheme * highlight SignColumn      ctermbg=NONE guibg=NONE
augroup END
if isdirectory(expand('~/.vim/plugged/molokai'))
    let g:rehash256 = 1
    colorscheme molokai
endif
function StatusLine()
    return repeat('â”€', winwidth(0))
endfunction
set statusline=%{StatusLine()}

" ==============================
" easymotion
" ==============================
let g:EasyMotion_do_mapping = 0
let g:EasyMotion_smartcase = 1
nmap <leader>s <Plug>(easymotion-overwin-f2)

" ==============================
" command
" ==============================
nmap <leader>r :source ~/.vimrc<CR>

